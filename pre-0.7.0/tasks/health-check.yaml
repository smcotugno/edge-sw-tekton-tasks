apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: igc-health-check
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: js-image
        type: string
        default: docker.io/node:12-stretch
      - name: tools-image
        type: string
        default: docker.io/csantanapr/helm-kubectl
  steps:
    - name: setup
      image: ${inputs.params.js-image}
      workingdir: ${inputs.resources.source.path}
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          # Export project name, version, and build number to ./env-config
          npm run env | grep "^npm_package_name" | sed "s/npm_package_name/APP_NAME/g"  > ./env-config
    - name: health-check
      image: ${inputs.params.tools-image}
      workingdir: ${inputs.resources.source.path}
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e

          . ./env-config

          ENVIRONMENT_NAME="${NAMESPACE}"

          INGRESS_NAME="${APP_NAME}"
          INGRESS_HOST=$(kubectl get ingress/${INGRESS_NAME} --namespace ${ENVIRONMENT_NAME} --output=jsonpath='{ .spec.rules[0].host }')
          PORT='80'

          # sleep for 10 seconds to allow enough time for the server to start
          sleep 30

          if [ $(curl -sL -w "%{http_code}\\n" "http://${INGRESS_HOST}:${PORT}/health" -o /dev/null --connect-timeout 3 --max-time 5 --retry 3 --retry-max-time 30) == "200" ]; then
              echo "Successfully reached health endpoint: http://${INGRESS_HOST}:${PORT}/health"
          echo "====================================================================="
              else
          echo "Could not reach health endpoint: http://${INGRESS_HOST}:${PORT}/health"
              exit 1;
          fi;
